import { o as objectPropertyIsEnumerable, f as functionUncurryThis, t as toIndexedObject, a as objectKeys, d as descriptors, _ as _export, s as script, c as createLoadingTask } from './index-f23f7269.js';
export { s as VuePdf, c as createLoadingTask } from './index-f23f7269.js';
import 'pdfjs-dist/legacy/build/pdf.js';
import 'pdfjs-dist/legacy/build/pdf.worker.entry';
import 'vue';

var $propertyIsEnumerable = objectPropertyIsEnumerable.f;

var propertyIsEnumerable = functionUncurryThis($propertyIsEnumerable);
var push = functionUncurryThis([].push);

// `Object.{ entries, values }` methods implementation
var createMethod = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!descriptors || propertyIsEnumerable(O, key)) {
        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

var objectToArray = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod(false)
};

var $entries = objectToArray.entries;

// `Object.entries` method
// https://tc39.es/ecma262/#sec-object.entries
_export({ target: 'Object', stat: true }, {
  entries: function entries(O) {
    return $entries(O);
  }
});

var es_object_entries = {

};

var components = /*#__PURE__*/Object.freeze({
  __proto__: null,
  VuePdf: script,
  createLoadingTask: createLoadingTask
});

var install = function install(app) {
  Object.entries(components).forEach(function (_a) {
    var componentName = _a[0],
        component = _a[1];
    app.component(componentName, component);
  });
};

export { install as default };
